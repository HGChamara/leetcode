package leetcode.binarytrees;

public class MaximumPathSum {

	public static int result = 0;
	public static void main(String[] args) {
		
		MaximumPathSum m = new MaximumPathSum();
		
		TreeNode root = new TreeNode(2);
		root.left = new TreeNode(1);
		root.right = new TreeNode(3);
		System.out.println(m.maxPathSum(root));

	}
	
	public int maxPathSum(TreeNode root) {
		result = root.val;
        int result = dfs(root);
        return result;
        
    }
	
	public int dfs(TreeNode root) {
		if(root == null) return 0;
		
		int leftMax = dfs(root.left);
		int rightMax = dfs(root.right);
		leftMax = Math.max(leftMax, 0);
		rightMax = Math.max(rightMax, 0);
		System.out.println(leftMax+" "+rightMax);
		
		result = Math.max(result, root.val+leftMax+rightMax);
		System.out.println(result);
		return root.val+ Math.max(leftMax, rightMax);
		
		
	}

}
