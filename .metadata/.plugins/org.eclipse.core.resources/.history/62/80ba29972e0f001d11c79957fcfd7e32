package leetcode.binarytrees;

import java.util.Stack;

public class SameTree {

	public static void main(String[] args) {
		TreeNode node = new TreeNode(3);
		node.left = new TreeNode(9);
		node.right = new TreeNode(20);
		node.left.left = new TreeNode(1);
		node.left.right = new TreeNode(3);
		node.right.left = new TreeNode(15);
		node.right.right = new TreeNode(7);
		
		TreeNode node2 = new TreeNode(3);
		node2.left = new TreeNode(9);
		node2.right = new TreeNode(20);
		node2.left.left = new TreeNode(1);
		node2.left.right = new TreeNode(3);
		node2.right.left = new TreeNode(15);
		node2.right.right = new TreeNode(7);
		System.out.println(isSameTree(node, node2));

	}

	public static boolean isSameTree(TreeNode p, TreeNode q) {
        
		if(p == null && q != null) return false;
		if(p != null && q == null) return false;
		if(p == null && q == null) return true;
		if(p.val != q.val) return false;
		else {
		boolean a = isSameTree(p.left, q.left) && isSameTree(p.right, q.right);
		return a;
		}
		
		
    }
}
