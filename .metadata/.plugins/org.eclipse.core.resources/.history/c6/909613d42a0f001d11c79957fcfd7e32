package leetcode.binarytrees;

import java.util.Stack;

public class SameTree {

	public static void main(String[] args) {
		TreeNode node = new TreeNode(3);
		node.left = new TreeNode(9);
		node.right = new TreeNode(20);
		node.left.left = new TreeNode(1);
		node.left.right = new TreeNode(3);
		node.right.left = new TreeNode(15);
		node.right.right = new TreeNode(7);
		
		TreeNode node2 = new TreeNode(3);
		node2.left = new TreeNode(9);
		node2.right = new TreeNode(20);
		node2.left.left = new TreeNode(1);
		node2.left.right = new TreeNode(3);
		node2.right.left = new TreeNode(15);
		node2.right.right = new TreeNode(7);

	}

	public boolean isSameTree(TreeNode p, TreeNode q) {
        
		Stack<TreeNode> nodeStack = new Stack<TreeNode>();
		nodeStack.add(p);
		
		while(!nodeStack.isEmpty()) {
			TreeNode currNode = nodeStack.pop();
			System.out.println(currNode.val);
			if(currNode.right != null) nodeStack.add(currNode.right);
			if(currNode.left != null) nodeStack.add(currNode.left);
			
		}
		
		
		return false;
        
        
        
    }
}
