package leetcode.binarytrees;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class CreateTreeInOrderPreOrder {

	public static void main(String[] args) {
		int[] preorder = {3,9,20,15,7};
		int[] inorder = {9,3,15,20,7};
		buildTree(preorder, inorder);

	}
	
	public static TreeNode buildTree(int[] preorder, int[] inorder) {
		
		if(preorder == null || inorder == null) return null;
		
		List<Integer> pre = Arrays.stream(preorder).boxed().collect(Collectors.toList());
		List<Integer> in = Arrays.stream(inorder).boxed().collect(Collectors.toList());
		
        TreeNode root = new TreeNode(preorder[0]);
        int mid  = in.indexOf(preorder[0]);
        
        int[] preNew = pre.subList(1, mid+1).stream().mapToInt(i -> i).toArray();
        int[] inNew = in.subList(1, mid+1).stream().mapToInt(i -> i).toArray();
        root.left = buildTree(preNew, inNew);
        
        return root;
    }

}
